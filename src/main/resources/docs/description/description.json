[
  {
    "patternId": "Lint_AmbiguousOperator",
    "title": "Ambiguous Operator",
    "description": "Checks for ambiguous operators in the first argument of a method invocation without parentheses",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AmbiguousRegexpLiteral",
    "title": "Ambiguous Regexp Literal",
    "description": "Checks for ambiguous regexp literals in thge first argument of a method invocation without parentheses.",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AssignmentInCondition",
    "title": "Assignment in Condition",
    "description": "Checks for assignments in the conditions of if/while/until",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "AllowSafeAssignment",
        "description": "putting parentheses around assignment to indicate that it actually is your intention to assign the value to a variable"
      }
    ]
  },
  {
    "patternId": "Lint_BlockAlignment",
    "title": "Block Alignment",
    "description": "Checks whether the end keyword is properly aligned with for and do blocks",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_DefEndAlignment",
    "title": "Def End Alignment",
    "description": "Checks the alignment of the end keyword",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "AlignWith",
        "description": "You can whether align with the start of the line or inline with the def keyword"
      },
      {
        "name": "SupportedStyles",
        "description": "Specifies the styles of you end keyword (inline with def or at the beggining of line)"
      }
    ]
  }
]