[
  {
    "patternId": "Lint_AmbiguousOperator",
    "title": "Ambiguous Operator",
    "description": "Checks for ambiguous operators in the first argument of a method invocation without parentheses",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AmbiguousRegexpLiteral",
    "title": "Ambiguous Regexp Literal",
    "description": "Checks for ambiguous regexp literals in thge first argument of a method invocation without parentheses.",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AssignmentInCondition",
    "title": "Assignment in Condition",
    "description": "Checks for assignments in the conditions of if/while/until",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "AllowSafeAssignment",
        "description": "putting parentheses around assignment to indicate that it actually is your intention to assign the value to a variable"
      }
    ]
  },
  {
    "patternId": "Style_VariableName",
    "title": "Variable Name",
    "description": "Variables can only be camel cased or snake cased",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "EnforcedStyle",
        "description": "This enforces you to use only one type for all of your files"
      },
      {
        "name": "SupportedStyles",
        "description": "Specifies the supported variable styles"
      }
    ]
  },
  {
    "patternId": "Lint_ConditionPosition",
    "title": "Condition Position",
    "description": "Checks for conditions that are not on the same line as if/while/until",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_DuplicateMethods",
    "title": "Duplicate Methods",
    "description": "Checks for duplicate methods in classes and modules",
    "timeToFix": 10
  },
  {
    "patternId": "Lint_EachWithObjectArgument",
    "title": "Each With Object Argument",
    "description": "Checks if each_with_object receives an immutable argument",
    "timeToFix": 5
  }
]