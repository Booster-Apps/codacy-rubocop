[
  {
    "patternId": "Lint_AmbiguousOperator",
    "title": "Ambiguous Operator",
    "description": "Checks for ambiguous operators in the first argument of a method invocation without parentheses",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AmbiguousRegexpLiteral",
    "title": "Ambiguous Regexp Literal",
    "description": "Checks for ambiguous regexp literals in thge first argument of a method invocation without parentheses.",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_AssignmentInCondition",
    "title": "Assignment in Condition",
    "description": "Checks for assignments in the conditions of if/while/until",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "AllowSafeAssignment",
        "description": "putting parentheses around assignment to indicate that it actually is your intention to assign the value to a variable"
      }
    ]
  },
  {
    "patternId": "Style_VariableName",
    "title": "Variable Name",
    "description": "Variables can only be camel cased or snake cased",
    "timeToFix": 5,
    "parameters": [
      {
        "name": "EnforcedStyle",
        "description": "This enforces you to use only one type for all of your files"
      },
      {
        "name": "SupportedStyles",
        "description": "Specifies the supported variable styles"
      }
    ]
  },
  {
    "patternId": "Lint_ConditionPosition",
    "title": "Condition Position",
    "description": "Checks for conditions that are not on the same line as if/while/until",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_DuplicateMethods",
    "title": "Duplicate Methods",
    "description": "Checks for duplicate methods in classes and modules",
    "timeToFix": 10
  },
  {
    "patternId": "Lint_EachWithObjectArgument",
    "title": "Each With Object Argument",
    "description": "Checks if each_with_object receives an immutable argument",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_ElseLayout",
    "title": "Else Layout",
    "description": "Checks for odd else block layout",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_EmptyEnsure",
    "title": "Empty Ensure",
    "description": "Checks for empty ensure blocks",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_EmptyInterpolation",
    "title": "Empty Interpolation",
    "description": "Checks for empty interpolations",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_Eval",
    "title": "Eval Usage",
    "description": "Checks for eval usage",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_LiteralInCondition",
    "title": "Literal in Condition",
    "description": "Checks if there are any literals inside a condition",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_LiteralInInterpolation",
    "title": "Literal in Interpolation",
    "description": "Checks if there are any literals inside a interpolation",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_Loop",
    "title": "Looping preferences",
    "description": "Enforces the use of Kernel#Loop instead of begin/end/until||while statements",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_NestedMethodDefinition",
    "title": "Nested method definitions",
    "description": "Checks for nested method definitions",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_ParenthesesAsGroupedExpression",
    "title": "Parentheses As Grouped Expression",
    "description": "Checks for a space between the name of a called method and a left parenthesis",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_RequireParentheses",
    "title": "Require Parentheses",
    "description": "Checks for expressions where there is a call to a predicate method with at least one argument",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_RescueException",
    "title": "Rescue Parentheses",
    "description": "Checks for calls to Exception when using rescue",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_ShadowingOuterLocalVariable",
    "title": "Shadowing Outer Local Variable",
    "description": "Checks for the use of the same name as outer local variables for block arguments or block variables",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_SpaceBeforeFirstArg",
    "title": "Space Before First Argument",
    "description": "Checks if there is a space between the first argument and the method call without parentheses",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_StringConversionInInterpolation",
    "title": "String Conversion In Interpolation",
    "description": "Checks for redundant string interpolation",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UnderscorePrefixedVariableName",
    "title": "Underscore Prefixed Variable Name",
    "description": "Checks for used variables that are prefixed with the character '_'",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UnreachableCode",
    "title": "Unreachable Code",
    "description": "Checks for unreachable code",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UnusedBlockArgument",
    "title": "Unused Block Argument",
    "description": "Checks for unused argument inside a code block",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UnusedMethodArgument",
    "title": "Unused Method Argument",
    "description": "Checks for unused arguments on a method",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UselessAccessModifier",
    "title": "Useless Access Modifier",
    "description": "Checks for access modifiers without any code",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UselessAssignment",
    "title": "Useless Assignment",
    "description": "Checks for useless assignment to local variable ion every scope",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UselessComparison",
    "title": "Useless Comparison",
    "description": "Checks for comparison of something with itself",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UselessElseWithoutRescue",
    "title": "Useless Else Without Rescue",
    "description": "Checks for useless else in begin..end without rescue",
    "timeToFix": 5
  },
  {
    "patternId": "Lint_UselessSetterCall",
    "title": "Useless Setter Call",
    "description": "Checks for useless setter call to local variable as the final expression of a function",
    "timeToFix": 5
  }
]